{"version":3,"sources":["components/AuthCheck.js","components/Login.js","components/data/Fetch.js","components/data/Customer.js","components/data/Refresh.js","components/Userdata.js","components/data/Customers.js","components/AllData.js","App.js","reportWebVitals.js","firebase.config.js","index.js"],"names":["ShowIfAuth","props","User","children","firebase","auth","currentUser","Token","a","getIdToken","ShowIfNoAuth","signOut","uiConfig","signInFlow","signInSuccessUrl","process","signInOptions","GoogleAuthProvider","PROVIDER_ID","Login","className","style","textAlign","paddingTop","src","alt","padding","color","fontSize","Typography","variant","display","height","width","firebaseAuth","useHttpClient","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","url","method","body","headers","fetch","Authorization","mode","redirect","response","ok","Error","status","statusText","responseData","json","message","clearError","Customer","data","setData","useEffect","records","converted","Object","entries","assign","key","value","push","console","log","Convert","options","search","searchable","showTitle","toolbar","paging","rowStyle","columns","title","field","editable","keyEditable","valueEditable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","id","useRefresh","refresh","setRefresh","refreshNow","Userdata","custInfo","setCustInfo","useFetch","PerformAsync","Customers","AllData","detailPanel","rowData","App","AppBar","position","Toolbar","IconButton","alignItems","right","onClick","SignOut","then","window","location","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getCurrentUser","unsubscribe","onAuthStateChanged","user","initializeApp","FirebaseSetup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f88d0e72.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport function ShowIfAuth(props) {\n   if (User() != null) return <>{props.children}</>;\n   return <></>;\n}\nexport function User() {\n   return firebase.auth().currentUser;\n}\nexport async function Token() {\n   return await User()?.getIdToken();\n}\nexport function ShowIfNoAuth(props) {\n   if (User() == null) return <>{props.children}</>;\n   return <></>;\n}\nexport async function SignOut() {\n   return firebase.auth().signOut();\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n// eslint-disable-next-line\nimport * as firebaseui from 'firebaseui';\nimport { Typography } from '@material-ui/core';\n\n// Configure FirebaseUI.\nconst uiConfig = {\n   signInFlow: 'redirect',\n   // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n   signInSuccessUrl: `${process.env.PUBLIC_URL}/`,\n   // We will display Google and Facebook as auth providers.\n   signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID] //,\n   // tosUrl: '<your-tos-url>',\n   // Privacy policy url/callback.\n   // privacyPolicyUrl: ''\n};\n\nexport default function Login() {\n   return (\n      <div\n         className=\"center\"\n         style={{ textAlign: 'center', paddingTop: '100px' }}\n      >\n         <img src={`${process.env.PUBLIC_URL}/logo192.png`} alt=\"Logo\" />\n         <div\n            className=\"center\"\n            style={{\n               textAlign: 'center',\n               padding: '30px',\n               color: '#808080',\n               fontSize: '20px'\n            }}\n         >\n            <Typography variant=\"h1\">Customer Info</Typography>\n            <Typography variant=\"subtitle1\">Count the Number of lectures attended</Typography>\n         </div>\n         <div style={{ display: 'inline-block', height: '50%', width: '70%' }}>\n            <StyledFirebaseAuth\n               uiConfig={uiConfig}\n               firebaseAuth={firebase.auth()}\n            />\n         </div>\n      </div>\n   );\n}\n","import { useState, useCallback } from 'react';\nimport { Token } from '../AuthCheck';\n\nexport default function useHttpClient() {\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState();\n\n   const sendRequest = useCallback(\n      async (url, method = 'GET', body = null, headers = {}) => {\n         setIsLoading(true);\n\n         try {\n            const response = await fetch(\n               `https://4du99ykcl8.execute-api.us-east-1.amazonaws.com/Prod/${url}`,\n               {\n                  method,\n                  body,\n                  mode: 'cors',\n                  headers: {\n                     ...headers,\n                     'Content-Type': 'application/json',\n                     Authorization: `Bearer ${await Token()}`\n                  },\n                  redirect: 'follow'\n               }\n            );\n            if (!response.ok) {\n               throw new Error(\n                  response.status + ' : ' + response.statusText + ' : '\n               );\n            }\n\n            let responseData = null;\n            try {\n               responseData = await response.json();\n            } catch (err) {}\n            setIsLoading(false);\n            return responseData;\n         } catch (err) {\n            setError(err.message);\n            setIsLoading(false);\n            throw err;\n         }\n      },\n      []\n   );\n\n   const clearError = () => {\n      setError(null);\n   };\n\n   return { isLoading, error, sendRequest, clearError };\n}\n","import MaterialTable from '@material-table/core';\nimport { useState, useEffect } from 'react';\n\nexport default function Customer(props) {\n   const [data, setData] = useState();\n\n   useEffect(() => {\n      setData(Convert(props.data));\n   }, [props]);\n\n   return (\n      <MaterialTable\n         {...console.log(props.data)}\n         options={{\n            search: props.searchable || false,\n            showTitle: props.searchable || false,\n            toolbar: props.searchable || false,\n            paging: false,\n            rowStyle: { textAlign: 'center' }\n         }}\n         columns={[\n            {\n               title: 'Key',\n               field: 'key',\n               editable: props.keyEditable || 'never'\n            },\n            {\n               title: 'Value',\n               field: 'value',\n               editable: props.valueEditable || 'never'\n            }\n         ]}\n         data={data}\n         title=\"Login Customer Detail\"\n         editable={{\n            onRowAdd: newData =>\n               new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                     console.log(data);\n                     setData([...data, newData]);\n                     console.log(data);\n                     resolve();\n \n                  }, 1000);\n               }),\n            onRowUpdate: (newData, oldData) =>\n               new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                     const dataUpdate = [...data];\n                     const index = oldData.tableData.id;\n                     dataUpdate[index] = newData;\n                     setData([...dataUpdate]);\n                     resolve();\n                  }, 1000);\n               })\n         }}\n      />\n   );\n}\n\nexport function Convert(records) {\n   const converted = [];\n   for (const [key, value] of Object.entries(Object.assign({}, ...records))) {\n      if (typeof value === 'string') converted.push({ key, value });\n   }\n   console.log(converted);\n   return converted;\n}\n","import { useState } from 'react';\n\nexport default function useRefresh() {\n   const [refresh, setRefresh] = useState(true);\n   const refreshNow = () => {\n      setRefresh(!refresh);\n   };\n   return {refresh, refreshNow};\n}\n","import { useEffect, useState } from 'react';\nimport useFetch from './data/Fetch';\nimport Customer from './data/Customer';\nimport useRefresh from './data/Refresh';\n\n\nexport default function Userdata() {\n   const [custInfo, setCustInfo] = useState();\n   const { refresh } = useRefresh();\n   const { sendRequest } = useFetch();\n\n   useEffect(() => {\n      async function PerformAsync() {\n         let data = await sendRequest(`customer`);\n         setCustInfo(data);\n         console.log(custInfo);\n      }\n      PerformAsync();\n   }, [refresh]);\n\n   return (\n      <Customer\n         data={custInfo ? custInfo : [{}]}\n         searchable={'always'}\n         keyEditable={'always'}\n         valueEditable={'always'}\n      />\n   );\n}\n","import MaterialTable from '@material-table/core';\nimport { useState, useEffect } from 'react';\n\nexport default function Customers(props) {\n   const [_, setData] = useState();\n\n   useEffect(() => {\n      setData(Convert(props.data));\n   }, [props]);\n\n   return (\n      <MaterialTable\n         {...console.log(props.data)}\n         options={{\n            search: props.searchable || false,\n            showTitle: props.searchable || false,\n            toolbar: props.searchable || false,\n            paging: false,\n            rowStyle: { textAlign: 'center' }\n         }}\n         columns={[\n            {\n               title: 'Key',\n               field: 'key',\n               editable: props.keyEditable || 'never'\n            },\n            {\n               title: 'Value',\n               field: 'value',\n               editable: props.valueEditable || 'never'\n            }\n         ]}\n         data={Convert(props.data)}\n      />\n   );\n}\n\nexport function Convert(records) {\n   const converted = [];\n   for (const [key, value] of Object.entries(records)) {\n      if (typeof value === 'string') converted.push({ key, value });\n   }\n   console.log(converted);\n   return converted;\n}\n","import { useEffect, useState } from 'react';\nimport Customers from './data/Customers';\nimport useFetch from './data/Fetch';\nimport useRefresh from './data/Refresh';\nimport MaterialTable from '@material-table/core';\n\nexport default function AllData() {\n   const [custInfo, setCustInfo] = useState();\n   const { refresh } = useRefresh();\n   const { sendRequest } = useFetch();\n\n   useEffect(() => {\n      async function PerformAsync() {\n         let data = await sendRequest(`customers`);\n         setCustInfo(data);\n         console.log(custInfo);\n      }\n      PerformAsync();\n   }, [refresh]);\n\n   return (\n      <MaterialTable\n         columns={[\n            { title: 'First Name', field: 'First Name' },\n            { title: 'Last Name', field: 'Last Name' }\n         ]}\n         data={custInfo}\n         title=\"All Customer Details\"\n         detailPanel={rowData => {\n            return (\n               <Customers\n                  data={rowData}\n               />\n            );\n         }}\n      />\n   );\n}\n","import './App.css';\nimport { ShowIfAuth, ShowIfNoAuth, SignOut } from './components/AuthCheck';\nimport Login from './components/Login';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Userdata from './components/Userdata';\nimport AllData from './components/AllData';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNewRounded';\n\nfunction App() {\n   return (\n      <>\n         <ShowIfAuth>\n            <div>\n               <AppBar position=\"static\">\n                  <Toolbar>\n                     <div style={{ textAlign: 'center' }}>\n                        <Typography variant=\"h3\" color=\"inherit\">\n                           Customer\n                           <Typography variant=\"h6\" color=\"inherit\">\n                              Information of All\n                           </Typography>\n                        </Typography>\n                     </div>\n                     <IconButton\n                        style={{\n                           alignItems: 'end',\n                           position: 'absolute',\n                           right: '2vw',\n                           height: '100%'\n                        }}\n                        onClick={() => {\n                           SignOut().then(() => {\n                              window.location.href = `${process.env.PUBLIC_URL}/`;\n                           });\n                        }}\n                     >\n                        <div>\n                           <LogoutIcon />\n                           <br />\n                           LOGOUT\n                        </div>\n                     </IconButton>\n                  </Toolbar>\n               </AppBar>\n               <Userdata />\n               <AllData />\n            </div>\n         </ShowIfAuth>\n         <ShowIfNoAuth>\n            <Login />\n         </ShowIfNoAuth>\n      </>\n   );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const firebaseConfig = {\n   apiKey: 'AIzaSyBuAD8yempb8JnNnl5-GyMfZh0ms5bgg3o',\n   authDomain: 'bunkstur.firebaseapp.com',\n   projectId: 'bunkstur',\n   storageBucket: 'bunkstur.appspot.com',\n   messagingSenderId: '757435315429',\n   appId: '1:757435315429:web:1e1a63a02566a1f256d00c',\n   measurementId: 'G-JCQ753ZH2C'\n};\n\nexport default firebaseConfig;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport firebaseConfig from './firebase.config';\n\nasync function FirebaseSetup() {\n   // eslint-disable-next-line\n   // await CreateAppointments();\n   // Wait till Firebase Load Complete before Firing\n   function getCurrentUser(auth) {\n      return new Promise((resolve, reject) => {\n         const unsubscribe = auth.onAuthStateChanged(user => {\n            unsubscribe();\n            resolve(user);\n         }, reject);\n      });\n   }\n   // If you want your app to work offline and load faster, you can change\n   // unregister() to register() below. Note this comes with some pitfalls.\n   // Learn more about service workers: https://bit.ly/CRA-PWA\n  //  serviceWorker.register();\n\n   firebase.initializeApp(firebaseConfig);\n   await getCurrentUser(firebase.auth());\n}\n\nFirebaseSetup().then(async () => {\n   ReactDOM.render(\n      <StrictMode>\n         <App />\n      </StrictMode>,\n      document.getElementById('root')\n   );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}